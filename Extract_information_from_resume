import os
import re
import docx

# Check for embedded images
def check_images(doc):
    try:
        image_count = sum(1 for rel in doc.part.rels.values() if "image" in rel.target_ref)
        return image_count
    except AttributeError:
        return 0

# Extract basic information
def extract_basic_info(text):
    name_pattern = r"^(\w+\s\w+)"
    email_pattern = r"[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}"
    phone_pattern = r"\b\d{10}\b"
    github_pattern = r"https?://(?:www\.)?github\.com/[a-zA-Z0-9_-]+"
    linkedin_pattern = r"https?://(?:www\.)?linkedin\.com/in/[a-zA-Z0-9_-]+"

    name = re.search(name_pattern, text)
    email = re.search(email_pattern, text)
    phone = re.search(phone_pattern, text)
    github = re.search(github_pattern, text)
    linkedin = re.search(linkedin_pattern, text)

    return (name.group(1) if name else None,
            email.group(0) if email else None,
            phone.group(0) if phone else None,
            github.group(0) if github else None,
            linkedin.group(0) if linkedin else None)

# Main code block
if __name__ == "__main__":
    try:
        folder_path = input("Enter the full path to the folder containing your .docx files: ").strip()

        # List and filter .docx files
        docx_files = [file for file in os.listdir(folder_path) if file.endswith('.docx')]

        if not docx_files:
            print("No .docx files found in the specified folder.")
        else:
            for file_name in docx_files:
                file_path = os.path.join(folder_path, file_name)
                
                try:
                    doc = docx.Document(file_path)

                    # Read all text
                    text = '\n'.join([paragraph.text for paragraph in doc.paragraphs])

                    # Check for images
                    image_count = check_images(doc)
                    print(f"File: {file_path}")
                    print(f"Number of images: {image_count}")

                    # Extract and display information
                    name, email, phone, github, linkedin = extract_basic_info(text)
                    print(f"Name: {name}")
                    print(f"Email: {email}")
                    print(f"Phone: {phone}")
                    print(f"GitHub: {github}")
                    print(f"LinkedIn: {linkedin}")
                    print('-' * 40)

                except Exception as e:
                    print(f"Error processing '{file_name}': {e}")
        
    except Exception as e:
        print(f"An error occurred: {e}")
